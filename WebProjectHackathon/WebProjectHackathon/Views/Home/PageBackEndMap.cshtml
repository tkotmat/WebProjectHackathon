<!DOCTYPE html>
<html lang="uk">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Backend-розробник</title>
    <link rel="stylesheet" href="~/css/profession2.css">
    <link rel="stylesheet" href="~/css/СSS.css">
</head>

<body>

    <header>
        <a href="index.html" button class="back-button">Назад </a></button>
        <h1 class="title">Шлях Backend-розробника</h1>
        <button class="submit-button">Відправити заявку на консультацію</button>
    </header>

    <div id="sidePanel" class="side-panel">
        <p>Це панель з інформацією!</p>
        <button class="center-button">Кнопка внизу</button>
    </div>

    <div class="roadmap-container">

        <div class="step-container">
            <div class="step" onclick="toggleSelect(this)">Вивчення мови програмування
                <button id="toggleButton1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; border: none; background: transparent; cursor: pointer;">
                    Невидимая кнопка
                </button>
            </div>
            <div class="step-description">JavaScript (Node.js), Python, PHP, Java або C#</div>
        </div>

        <div class="step-container">
            <div class="step" onclick="toggleSelect(this)">Робота з базами даних
                <button id="toggleButton1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; border: none; background: transparent; cursor: pointer;">
                    Невидимая кнопка
                </button>
            </div>
            <div class="step-description">SQL (PostgreSQL, MySQL) або NoSQL (MongoDB, Firebase)</div>
        </div>

        <div class="step-container">
            <div class="step" onclick="toggleSelect(this)">Архітектура та серверні технології
                <button id="toggleButton1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; border: none; background: transparent; cursor: pointer;">
                    Невидимая кнопка
                </button>
            </div>
            <div class="step-description">MVC, REST API, GraphQL. Аутентифікація (JWT, OAuth)</div>

        </div>

        <div class="step-container">
            <div class="step" onclick="toggleSelect(this)">DevOps та хмарні технології
                <button id="toggleButton1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; border: none; background: transparent; cursor: pointer;">
                    Невидимая кнопка
                </button>
            </div>
            <div class="step-description">Docker, Kubernetes, AWS, CI/CD</div>
        </div>

        <div class="step-container">
            <div class="step" onclick="toggleSelect(this)">Практика та працевлаштування
                <button id="toggleButton1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; border: none; background: transparent; cursor: pointer;">
                    Невидимая кнопка
                </button>
            </div>
            <div class="step-description">Створення портфоліо (GitHub). Стажування, перша робота</div>

        </div>
    </div>

    <script>
        function toggleSelect(element) {
            element.classList.toggle("selected");
        }
    </script>

    <script>
        const toggleButtons = ['toggleButton1'];
        const sidePanel = document.getElementById('sidePanel');
        let lastOpenedButton = null; // Переменная для отслеживания последней открытой кнопки

        toggleButtons.forEach(buttonId => {
          const button = document.getElementById(buttonId);
          button.addEventListener('click', () => {
            // Если панель открыта и нажата та же кнопка
            if (sidePanel.classList.contains('open') && lastOpenedButton === buttonId) {
              sidePanel.classList.remove('open'); // Закрываем панель
            }
            // Если панель открыта и нажата другая кнопка
            else if (sidePanel.classList.contains('open') && lastOpenedButton !== buttonId) {
              sidePanel.classList.remove('open'); // Закрываем панель
              setTimeout(() => {
                sidePanel.classList.add('open'); // Открываем панель снова после задержки
              }, 600); // Задержка, чтобы панель успела закрыться перед повторным открытием
            }
            // Если панель закрыта, открываем ее
            else if (!sidePanel.classList.contains('open')) {
              sidePanel.classList.add('open');
            }

            lastOpenedButton = buttonId; // Обновляем последнюю открытую кнопку
          });
        });
    </script>

</body>

</html>
