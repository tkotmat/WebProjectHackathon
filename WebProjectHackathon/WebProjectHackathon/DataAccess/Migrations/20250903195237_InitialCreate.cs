using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace WebProjectHackathon.DataAccess.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "ContextHomePages",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Title = table.Column<string>(type: "TEXT", maxLength: 200, nullable: false),
                    Description = table.Column<string>(type: "TEXT", maxLength: 1000, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContextHomePages", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "CircleContextPagesInfos",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Title = table.Column<string>(type: "TEXT", maxLength: 200, nullable: false),
                    Description = table.Column<string>(type: "TEXT", maxLength: 1000, nullable: false),
                    IdContextHomePages = table.Column<int>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CircleContextPagesInfos", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CircleContextPagesInfos_ContextHomePages_IdContextHomePages",
                        column: x => x.IdContextHomePages,
                        principalTable: "ContextHomePages",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MainPanelContexts",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Title = table.Column<string>(type: "TEXT", maxLength: 200, nullable: false),
                    Context = table.Column<string>(type: "TEXT", maxLength: 1000, nullable: false),
                    Url = table.Column<string>(type: "TEXT", maxLength: 500, nullable: false),
                    CircleContextPagesInfoEntityId = table.Column<int>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MainPanelContexts", x => x.Id);
                    table.ForeignKey(
                        name: "FK_MainPanelContexts_CircleContextPagesInfos_CircleContextPagesInfoEntityId",
                        column: x => x.CircleContextPagesInfoEntityId,
                        principalTable: "CircleContextPagesInfos",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "ContextHomePages",
                columns: new[] { "Id", "Description", "Title" },
                values: new object[,]
                {
                    { 1, "Створює зовнішній інтерфейс сайтів та веб-додатків. Відповідає за вигляд, інтерактивність та коректну роботу веб-сторінок на різних пристроях. Використовує HTML, CSS, JavaScript та сучасні фреймворки.", "Frontend-розробник" },
                    { 2, "Розробляє логіку роботи сервера, баз даних та API, які забезпечують функціонування сайту. Працює з мовами програмування, такими як Python, PHP, Java, та базами даних MySQL або PostgreSQL.", "Backend-розробник" },
                    { 3, "Шукає та адаптує нових спеціалістів, створює комфортну атмосферу у команді, проводить співбесіди та допомагає з розвитком персоналу. Відповідає за побудову сильної корпоративної культури.", "HR Manager" },
                    { 4, "Проектує інтерфейси, роблячи їх зручними, доступними та привабливими для користувачів. Використовує інструменти дизайну, такі як Figma, Adobe XD, та аналізує поведінку користувачів для покращення взаємодії.", "UX/UI Дизайнер" }
                });

            migrationBuilder.InsertData(
                table: "CircleContextPagesInfos",
                columns: new[] { "Id", "Description", "IdContextHomePages", "Title" },
                values: new object[,]
                {
                    { 1, "Основи HTML, CSS, JavaScript. Розуміння структури веб-сторінок.", 1, "Вивчити основи веб-розробки" },
                    { 2, "React, Vue або Angular. Компонентний підхід, SPA, state management.", 1, "Освоїти сучасні фреймворки та бібліотеки" },
                    { 3, "Chrome DevTools, Postman, Git, Webpack. Налагодження та оптимізація.", 1, "Вивчити інструменти розробника" },
                    { 4, "REST API, GraphQL. Запити до серверів, обробка JSON.", 1, "Робота з API" },
                    { 5, "Верстка проектів, хостинг, підключення реальних API.", 1, "Створити портфоліо" },
                    { 6, "Фріланс, стажування, open-source проекти. Робота в команді.", 1, "Отримати перший комерційний досвід" },
                    { 7, "JavaScript (Node.js), Python, PHP, Java або C#", 2, "Вивчення мови програмування" },
                    { 8, "SQL (PostgreSQL, MySQL) або NoSQL (MongoDB, Firebase)", 2, "Робота з базами даних" },
                    { 9, "MVC, REST API, GraphQL. Аутентифікація (JWT, OAuth)", 2, "Архітектура та серверні технології" },
                    { 10, "Docker, Kubernetes, AWS, CI/CD", 2, "DevOps та хмарні технології" },
                    { 11, "Створення портфоліо (GitHub). Стажування, перша робота", 2, "Практика та працевлаштування" },
                    { 12, "Вивчення теорії", 3, "Менеджмент, психологія, HR-курси" },
                    { 13, "LinkedIn, Work.ua, Djinni, ATS-системи (Workable, Greenhouse)", 3, "Освоєння HR-інструментів" },
                    { 14, "Проведення співбесід та робота з конфліктами", 3, "Розвиток комунікаційних навичок" },
                    { 15, "Оформлення документів", 3, "Знання трудового законодавства" },
                    { 16, "Стажування у HR-відділі", 3, "Практика та працевлаштування" },
                    { 17, "Колір, типографіка, розташування. Контраст, баланс, ритм. Використання сіток (grid system).", 4, "Візуальна ієрархія" },
                    { 18, "Аналіз поведінки, тестування макетів (Google Analytics, Hotjar, A/B-тестування).", 4, "UX-дослідження" },
                    { 19, "Figma, Adobe XD, Sketch – створення UI, прототипування, дизайн-системи.", 4, "Інструменти" },
                    { 20, "Основи HTML, CSS, змінні, шрифти, кольорові схеми.", 4, "Код для дизайнерів" },
                    { 21, "3-5 кейсів у Behance, Dribbble.", 4, "Портфоліо" }
                });

            migrationBuilder.InsertData(
                table: "MainPanelContexts",
                columns: new[] { "Id", "CircleContextPagesInfoEntityId", "Context", "Title", "Url" },
                values: new object[,]
                {
                    { 1, 1, "Основи створення веб-сторінок: структура HTML-документів, основні теги та атрибути. Використання CSS для стилізації елементів, верстка сторінок та адаптивний дизайн.", "HTML та CSS", "https://developer.mozilla.org/uk/docs/Learn9" },
                    { 2, 1, "Основи мови програмування JavaScript: змінні, типи даних, функції, цикли та умови. Робота з DOM (Document Object Model), події та маніпуляція HTML-елементами.", "JavaScript та DOM", "https://developer.mozilla.org/uk/docs/Web/JavaScript" },
                    { 3, 1, "Знайомство з серверною частиною веб-розробки. Основи роботи з базами даних (SQL, NoSQL), сервери, API та бекенд-фреймворки, наприклад, ASP.NET MVC.", "Основи Backend-розробки", "https://learn.microsoft.com/uk-ua/aspnet/mvc/" },
                    { 4, 1, "Використання систем контролю версій, таких як Git. Основи хостингу, деплою веб-додатків, робота з хмарними платформами (Azure, AWS).", "Контроль версій та розгортання", "https://docs.github.com/uk/get-started" },
                    { 5, 2, "Популярна бібліотека для створення інтерфейсів користувача. Основи роботи з компонентами, станами (state), пропсами (props) та хуками (hooks). Знайомство з JSX та віртуальним DOM.", "React.js", "https://react.dev/" },
                    { 6, 2, "Фреймворк від Google для побудови масштабованих SPA (Single Page Applications). Основи TypeScript, робота з компонентами, модулями, сервісами та RxJS.", "Angular", "https://source3.com" },
                    { 7, 2, "Простий у засвоєнні фреймворк для створення реактивних інтерфейсів. Робота з шаблонами, директивами, Vue Router та Vuex.", "Vue.js", "https://source3.com" },
                    { 8, 2, "Сучасний бекенд-фреймворк від Microsoft для створення веб-додатків, API та мікросервісів. Вивчення контролерів, middleware, Entity Framework Core та автентифікації.", "ASP.NET Core", "https://learn.microsoft.com/en-us/aspnet/core/" },
                    { 9, 3, "Набір інструментів для налагодження веб-сторінок у браузері Google Chrome. Дозволяє аналізувати HTML, CSS, JavaScript, мережеві запити, продуктивність та помилки.", "Chrome DevTools", "https://developer.mozilla.org/uk/docs/Learn9" },
                    { 10, 3, "Популярний інструмент для тестування API. Дозволяє надсилати HTTP-запити, перевіряти відповіді серверів, створювати колекції запитів та автоматизувати тестування.", "Postman", "https://developer.mozilla.org/uk/docs/Web/JavaScript" },
                    { 11, 3, "Модульний збирач JavaScript-додатків, що оптимізує код, обробляє CSS, зображення та інші ресурси. Вивчення конфігурації, лоадерів та плагінів.", "Webpack", "https://learn.microsoft.com/uk-ua/aspnet/mvc/" },
                    { 12, 3, "Платформа для контейнеризації, що дозволяє створювати, розгортати та керувати ізольованими середовищами для додатків. Основи Docker Compose, Docker Images та контейнерів.", "Docker", "https://docs.github.com/uk/get-started" },
                    { 13, 4, "Знайомство з принципами REST (Representational State Transfer), методами HTTP-запитів (GET, POST, PUT, DELETE), статус-кодами та форматами обміну даними (JSON, XML).", "Основи REST API", "https://source1.com" },
                    { 14, 4, "Робота з API у JavaScript: використання fetch() та бібліотеки Axios для виконання HTTP-запитів, обробка відповідей сервера та помилок.", "Fetch та Axios", "https://source2.com" },
                    { 15, 4, "Розробка API за допомогою ASP.NET Core: створення контролерів, обробка запитів, використання JSON Web Token (JWT) для автентифікації та взаємодія з базами даних через Entity Framework Core.", "API з ASP.NET Core", "https://source3.com" },
                    { 16, 4, "Після підготовки варто активно шукати можливості: Джуніор-позиції та стажування – пошук у LinkedIn, на сайтах компаній, Нетворкінг – участь у мітапах, Telegram-чатах для айтішників, Кар'єрний ріст – пробувати нові технології, покращувати софт-скіли", "GraphQL альтернатива REST", "https://source4.com" },
                    { 17, 5, "Портфоліо можна створити у вигляді окремого веб-сайту або розмістити на платформах типу GitHub Pages, Netlify або Vercel. Важливо продумати структуру: Головна сторінка (про себе, фото, контакти),Проекти (список з описом та посиланнями).", "Вибір платформи та структури", "https://source1.com" },
                    { 18, 5, "HTML, CSS, JavaScript – для створення статичного сайту, React.js, Vue.js або Angular – для динамічного портфоліо,Bootstrap або Tailwind CSS – для швидкого стилізування.", "Технології для розробки портфоліо", "https://source2.com" },
                    { 19, 5, "Важливо додати кілька проєктів, які демонструють навички. Для кожного проекту: Назва та короткий опис, Використані технології, Скріншоти або демо-версія.", "Додавання проектів", "https://source3.com" },
                    { 20, 5, "Щоб портфоліо виглядало професійно: Використовуй адаптивний дизайн, Додай анімації або інтерактивні елементи, Використовуй мета-теги та SEO-практики.", "Оптимізація та SEO", "https://source4.com" },
                    { 21, 6, "Один із найпростіших способів отримати перші комерційні замовлення – почати працювати на фрілансі. Реєструйся на платформах, заповнюй профіль і пропонуй свої послуги.", "Фріланс-платформи", "https://source1.com" },
                    { 22, 6, "Допоможи некомерційним організаціям або внеси вклад у Open Source-проєкти. Це не лише корисний досвід, але й можливість створити портфоліо та отримати рекомендації.", "Open Source та волонтерські проєкти", "https://source2.com" },
                    { 23, 6, "Шукай стажування або роботу на позицію Junior Developer. Деякі компанії готові брати початківців без досвіду, якщо є базові навички.", "Стажування та джуніор-вакансії", "https://source3.com" },
                    { 24, 6, "Знайомся з іншими розробниками та шукай можливості через знайомих. Відвідуй IT-конференції, мітапи, вебінари.", "Нетворкінг та знайомства", "https://source4.com" },
                    { 25, 7, "Перед початком навчання варто визначитися з мовою програмування. Вибір залежить від мети: Python, JavaScript, Java, C#, C++, Swift, Kotlin", "Вибір мови програмування", "https://devdocs.io/" },
                    { 26, 7, "Після вибору мови потрібно освоїти її базові конструкції: Змінні та типи даних, Оператори та умови, Цикли та функції", "Основи синтаксису", "https://source2.com" },
                    { 27, 7, "Бібліотеки та фреймворки допомагають пришвидшити розробку: Django, Flask – для бекенду, Spring Boot – для Java-додатків", "Робота з бібліотеками та фреймворками", "https://docs.djangoproject.com/" },
                    { 28, 7, "Кращий спосіб вивчити програмування – практика: Розв’язуйте задачі на алгоритми, Беріть участь у хакатонах, Розробляйте власні проєкти", "Практика та створення проєктів", "https://source2.com" },
                    { 29, 8, "База даних – це організований набір даних, що зберігається та керується системою управління базами даних (СУБД). Основні поняття: Реляційні БД (SQL) – MySQL, PostgreSQL. Нереляційні БД (NoSQL) – MongoDB, Redis, Cassandra та Запити SQL – SELECT, INSERT, UPDATE, DELETE", "Основи баз даних", "https://source1.com" },
                    { 30, 8, "Щоб створити ефективну БД, потрібно враховувати: Нормалізацію (запобігання дублюванню даних), Зв’язки між таблицями (один-до-одного, один-до-багатьох), Індекси для пришвидшення пошуку даних", "Проєктування баз даних", "https://vertabelo.com/" },
                    { 31, 8, "Реляційні БД використовують SQL-запити, тоді як NoSQL підходять для гнучкого зберігання даних: MySQL/PostgreSQL – класичні реляційні БД, Redis – ключ-значення для кешування, Firebase – хмарне сховище", "Робота з реляційними та NoSQL базами", "https://www.postgresql.org/docs/" },
                    { 32, 8, "Щоб база працювала швидко та безпечно, потрібно: Використовувати індекси для швидкого пошуку, Уникати надмірної вкладеності запитів, Захищати дані від SQL-ін’єкцій", "Оптимізація та безпека баз даних", "https://source4.com" },
                    { 33, 9, "Архітектура програмного забезпечення визначає структуру та взаємодію компонентів системи. Основні підходи: Монолітна архітектура – вся логіка в одному застосунку", "Основи архітектури програмного забезпечення", "https://microservices.io/" },
                    { 34, 9, "Серверні технології використовуються для обробки запитів та управління даними. Популярні технології: Apache, Nginx – веб-сервери для обробки HTTP-запитів, Django, Flask – Python-фреймворки для бекенду", "Серверні технології та веб-сервери", "https://source2.com" },
                    { 35, 9, "Сервер обробляє запити до бази даних. Основні підходи: SQL (MySQL, PostgreSQL) – для структурованих даних, NoSQL (MongoDB, Redis) – для гнучких та швидких запитів", "Бази даних у серверних застосунках", "https://source3.com" },
                    { 36, 9, "Щоб система була стійкою, потрібно: Балансування навантаження (Load Balancer, Nginx), Хмарні рішення (AWS, Google Cloud, Azure), Безпека (HTTPS, JWT, OAuth)", "Масштабування, балансування навантаження та безпека", "https://aws.amazon.com/" },
                    { 37, 10, "DevOps – це методологія, що поєднує розробку (Development) та операційну діяльність (Operations).", "Основи DevOps", "https://source1.com" },
                    { 38, 10, "Автоматизація – ключовий аспект DevOps. Основні інструменти: Контейнери – Docker, Podman, Jenkins, GitLab CI.", "Інструменти DevOps", "https://kubernetes.io/" },
                    { 39, 10, "Хмарні платформи надають інструменти для масштабування та керування інфраструктурою: AWS (Amazon Web Services)", "Хмарні технології", "https://learn.microsoft.com/en-us/azure/" },
                    { 40, 10, "Для стабільної роботи системи важливо впровадити моніторинг та безпеку: Моніторинг логів та продуктивності", "Моніторинг та безпека", "https://source4.com" },
                    { 41, 11, "Для успішного працевлаштування важливо мати реальний досвід роботи з технологіями. Особисті проєкти, Open Source, Фріланс, Хакатони та конкурси.", "Практичний досвід та створення проєктів", "https://www.codewars.com/" },
                    { 42, 11, "Щоб зацікавити роботодавця, потрібно грамотно оформити резюме та портфоліо: Резюме, Портфоліо, LinkedIn.", "Написання резюме та портфоліо", "https://source2.com" },
                    { 43, 11, "Для успішного проходження співбесід потрібно: Алгоритмічні завдання, Питання щодо структур даних та алгоритмів, Підготовка до технічної співбесіди.", "Підготовка до співбесіди", "https://www.hackerrank.com/" },
                    { 44, 11, "Джуніор-позиції та стажування – пошук у LinkedIn, на сайтах компаній, Нетворкінг, Кар'єрний ріст – пробувати нові технології, покращувати софт-скіли", "Пошук роботи та перші кроки в кар'єрі", "https://source4.com" },
                    { 45, 12, "Основи управління персоналом, психологія роботи з людьми та підбір кадрів: Основи менеджменту: як знайти, мотивувати та утримати співробітників.", "HR-менеджер", "https://source1.com" },
                    { 46, 12, "Знайомство з платформами для пошуку кандидатів та автоматизація рекрутингу: LinkedIn, Work.ua, Djinni: пошук та аналіз профілів, ATS-системи (Workable, Greenhouse, BambooHR): автоматизація процесу найму.", "Освоєння HR-інструментів", "https://source2.com" },
                    { 47, 12, "Навички проведення співбесід та вирішення конфліктів у командах: Підготовка ефективних питань та оцінка відповідей кандидатів, визначення мотивації та рівня професіоналізму претендента.", "Розвиток комунікаційних навичок", "https://source3.com" },
                    { 48, 12, "Оформлення документації та правові аспекти працевлаштування: Контракти, політики компанії, NDA, законодавчі вимоги щодо працевлаштування та оформлення співробітників.", "Знання трудового законодавства", "https://source4.com" },
                    { 49, 13, "Вивчення методів збору та аналізу даних про співробітників для оцінки їхньої ефективності та побудови метрик продуктивності.", "Основи HR-аналізу", "https://source1.com" },
                    { 50, 13, "Використання інструментів для автоматизації процесів підбору кандидатів, таких як HR-боти та онлайн-платформи для співбесід та тестування.", "Підбір та найм персоналу", "https://source2.com" },
                    { 51, 13, "Застосування інструментів для вимірювання рівня залученості та визначення факторів, що впливають на мотивацію та утримання співробітників.", "Аналіз залученості співробітників", "https://source3.com" },
                    { 52, 13, "Освоєння програмних рішень для автоматизації HR-процесів, включаючи розрахунок заробітної плати, управління відпустками та лікарняними.", "HR-автоматизація та ІТ-інструменти", "https://source4.com" },
                    { 53, 14, "Вивчення принципів та технік ефективного спілкування, зокрема активного слухання та чіткої передачі інформації.", "Основи ефективної комунікації", "https://source1.com" },
                    { 54, 14, "Розвиток навичок розв'язання конфліктних ситуацій у команді, використання технік для конструктивного вирішення суперечок.", "Управління конфліктами", "https://source2.com" },
                    { 55, 14, "Опанування стратегій для ефективної роботи в команді, в тому числі обговорення ідей, обміну інформацією та підтримки колег.", "Командна комунікація", "https://source3.com" },
                    { 56, 14, "Розвиток навичок взаємодії з різними людьми, включаючи встановлення контактів, створення довірливих відносин і адаптацію до різних стилів спілкування.", "Міжособистісні комунікації", "https://source4.com" },
                    { 57, 15, "Вивчення основних положень трудового кодексу та законів, що регулюють права та обов'язки роботодавців і працівників.", "Основи трудового законодавства", "https://source1.com" },
                    { 58, 15, "Опанування процесами укладання трудових договорів, реєстрації працівників, а також розуміння різних видів трудових контрактів.", "Оформлення трудових відносин", "https://source2.com" },
                    { 59, 15, "Знання прав та обов'язків сторін трудових відносин, включаючи питання оплати праці, відпусток, лікарняних та дисциплінарних санкцій.", "Права та обов'язки працівників і роботодавців", "https://source3.com" },
                    { 60, 15, "Ознайомлення з процедурами вирішення трудових спорів, звернення до органів праці та судових установ, а також медіація в трудових питаннях.", "Урегулювання трудових суперечок", "https://source4.com" },
                    { 61, 16, "Опанування методів ефективного пошуку роботи, створення резюме та супровідного листа, а також підготовка до співбесід.", "Пошук та підбір роботи", "https://source1.com" },
                    { 62, 16, "Вивчення кроків для успішної адаптації на новій посаді, знайомство з корпоративною культурою та вимогами компанії.", "Процес адаптації на новому місці роботи", "https://source2.com" },
                    { 63, 16, "Планування та розвиток кар'єри, участь у навчальних програмах, підвищення кваліфікації та просування по службі.", "Професійний розвиток та кар'єрне зростання", "https://source3.com" },
                    { 64, 16, "Знання правових норм щодо працевлаштування, укладення контрактів, трудових відносин, а також захисту прав працівників.", "Законодавчі аспекти працевлаштування", "https://source4.com" },
                    { 65, 17, "Організація елементів інтерфейсу за рівнем важливості, використовуючи розмір, колір, контраст і простір.", "Візуальна ієрархія", "https://source1.com" },
                    { 66, 17, "Вибір шрифтів, їх поєднання, розмір та інтервали для зручності читання і візуальної гармонії.", "Типографіка в UI/UX", "https://source2.com" },
                    { 67, 17, "Використання кольорової палітри для передачі настрою, підвищення зручності використання та створення акцентів.", "Колір та контраст", "https://source3.com" },
                    { 68, 17, "Використання сіткових систем для впорядкування контенту та забезпечення гармонійного розташування елементів.", "Сітки та вирівнювання", "https://source4.com" },
                    { 69, 18, "Визначення потреб, поведінки та очікувань користувачів за допомогою опитувань, інтерв’ю та аналізу даних.", "Аналіз цільової аудиторії", "https://source1.com" },
                    { 70, 18, "Перевірка зручності використання продукту через спостереження за реальними користувачами та виявлення проблем у взаємодії.", "Юзабіліті-тестування", "https://source2.com" },
                    { 71, 18, "Розробка узагальнених портретів користувачів для кращого розуміння їхніх цілей, мотивації та болей.", "Створення персон користувачів", "https://source3.com" },
                    { 72, 18, "Візуалізація взаємодії користувача з продуктом, виявлення проблемних точок і можливостей для покращення UX.", "Картування користувацького шляху (User Journey)", "https://source4.com" },
                    { 73, 19, "Популярний інструмент для створення макетів, прототипування та спільної роботи над дизайном.", "Figma", "https://source1.com" },
                    { 74, 19, "Програма для проєктування інтерфейсів, створення інтерактивних прототипів і тестування UX-рішень.", "Adobe XD", "https://source2.com" },
                    { 75, 19, "Інструмент для розробки UI-дизайну, що використовується переважно на macOS, із широкими можливостями плагінів.", "Sketch", "https://source3.com" },
                    { 76, 19, "Онлайн-дошка для командної роботи, мозкового штурму, створення схем користувацького шляху та UX-досліджень.", "Miro", "https://source4.com" },
                    { 77, 20, "Вивчення базової структури веб-сторінок, стилізація елементів та створення адаптивного дизайну.", "Основи HTML та CSS", "https://source1.com" },
                    { 78, 20, "Додавання динаміки до інтерфейсу за допомогою анімацій, плавних переходів і ефектів наведення.", "CSS-анімації та переходи", "https://source2.com" },
                    { 79, 20, "Використання JavaScript для інтерактивності, таких як модальні вікна, випадаючі меню та динамічний контент.", "Основи JavaScript для UI", "https://source3.com" },
                    { 80, 20, "Використання готових компонентів і стилів для прискорення розробки та уніфікації дизайну.", "Фреймворки та бібліотеки (Bootstrap, Tailwind CSS)", "https://source4.com" },
                    { 81, 21, "Включення кількох ваших найкращих проєктів, які демонструють ваші навички в дизайні, дослідженнях та прототипуванні.", "Демонстрація проєктів", "https://source1.com" },
                    { 82, 21, "Документування етапів роботи над проєктами, від досліджень до реалізації, щоб показати ваше розуміння процесу UX/UI-дизайну.", "Опис процесу роботи", "https://source2.com" },
                    { 83, 21, "Додавання інтерактивних прототипів, щоб потенційні клієнти могли взаємодіяти з вашим дизайном і бачити його в дії.", "Інтерактивні прототипи", "https://source3.com" },
                    { 84, 21, "Додавання відгуків клієнтів або колег, які можуть підтвердити вашу професійну кваліфікацію та досвід.", "Відгуки та рекомендації", "https://source4.com" }
                });

            migrationBuilder.CreateIndex(
                name: "IX_CircleContextPagesInfos_IdContextHomePages",
                table: "CircleContextPagesInfos",
                column: "IdContextHomePages");

            migrationBuilder.CreateIndex(
                name: "IX_MainPanelContexts_CircleContextPagesInfoEntityId",
                table: "MainPanelContexts",
                column: "CircleContextPagesInfoEntityId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "MainPanelContexts");

            migrationBuilder.DropTable(
                name: "CircleContextPagesInfos");

            migrationBuilder.DropTable(
                name: "ContextHomePages");
        }
    }
}
